% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data_transformation_pipeline.R
\name{create_starterframe}
\alias{create_starterframe}
\title{Set up a nested data frame with transformations}
\usage{
create_starterframe(transformations = list(), y = NULL, .suffix = NULL,
  .prefix = NULL)
}
\arguments{
\item{transformations}{a named list of transformations}

\item{y}{the values you want to predict, can be empty}

\item{.suffix}{a vector of the same length as the transformation list that contains the suffix you want to apply to your variables}

\item{.prefix}{a vector of the same length as the transformation list that contains the prefix you want to apply to your variables}
}
\value{
a nested data frame with trainingsets, name and y values (if supplied)
}
\description{
In many machinelearning projects you want to start with original
values, but also transformations of those values. This function
combines all transformations into 1 nested dataframe that contains
the transformed data frames
}
\examples{
\\notrun{
library(mlbench)
data("BostonHousing")
prepTrain <- preProcess(x = BostonHousing[,preds.original], method = c('BoxCox'))
data_transformation(list(
      original = BostonHousing[,1:13],
      boxcoxed = predict(prepTrain,newdata = BostonHousing[,preds.original]),
      squared  = (BostonHousing[,c(1:3,5:13)])^2
       ),
        .suffix = c(NA, "boxed","squared"))
}
}
